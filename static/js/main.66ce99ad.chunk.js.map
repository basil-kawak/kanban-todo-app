{"version":3,"sources":["components/navigation.js","containers/db.js","components/modal.js","components/addBoardBtn.js","components/addItem.js","components/item.js","components/editItem.js","components/boardsList.js","components/board.js","components/complete.js","components/err404.js","components/footer.js","App.js","serviceWorker.js","index.js"],"names":["Navigation","className","to","activeClassName","exact","fire","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","Modal","setAppElement","OurModal","props","onRequestClose","ModalOff","isOpen","ModalOn","contentLabel","closeTimeoutMS","Form","Group","controlId","Control","type","placeholder","onChange","getBoardInputData","Button","variant","onClick","addBoard","block","SwitchModal","AddBoardBtn","DropdownButton","id","title","Dropdown","Item","sortByTitle","sortByDate","taggelView","View","AddItem","board","FormOn","name","ref","register","as","rows","submiting","emptyForm","ButtonGroup","toggle","ToggleButton","e","assignForm","defaultChecked","value","deleteBoard","cardList","map","item","key","uid","complated","Card","style","width","Body","Title","assignedTo","Text","dueDate","note","markAsCompleted","StartEditItem","deleteItem","EditItem","StartEditItemOff","EditItemState","open","Label","registerEdit","defaultValue","OnEditItem","submitingEdit","BoardsList","useState","ItemsOn","setItemsOn","Board","setFormOn","setBoard","setModalOn","InputState","setInputState","setEditItemState","setOnEditItem","setView","setSortedBoard","date","Date","fullDate","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","fetchData","a","collection","get","res","docs","post","data","posts","sort","b","dateStamp","preventDefault","uniID","length","now","newBoard","doc","set","delete","filter","el","console","log","useForm","handleSubmit","onSubmit","oldBoard1","oldBoard","BoardID","dataWithStatus","newCardList","indexOf","index","slice","finalData","update","boardId","itemId","oldItem","EditTitle","EditAssignTo","EditDueDate","EditNote","newItem","ItemIndex","BoardIndex","useEffect","target","toLowerCase","Items","setItems","orderBy","completedItems","i","items","n","Err404","Footer","App","path","component","CompletedBoards","UnCompletedBoards","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.66ce99ad.chunk.js","sourcesContent":["import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nconst Navigation = () => {\n  return (\n    <div className=\"navsCon\">\n      <NavLink\n        className=\"navs\"\n        to=\"/completedboards\"\n        activeClassName=\"selected\"\n        exact={true}\n      >\n        Completed Items\n      </NavLink>\n      <NavLink className=\"navs\" to=\"/\" activeClassName=\"selected\" exact={true}>\n        Home\n      </NavLink>\n    </div>\n  );\n};\n\nexport default Navigation;\n","import * as firebase from \"firebase\";\nvar firebaseConfig = {\n  apiKey: \"AIzaSyCm_YxHHUGvO2wspIzdv8plaQ7PWtPS_Xw\",\n  authDomain: \"posts-8b494.firebaseapp.com\",\n  databaseURL: \"https://posts-8b494.firebaseio.com\",\n  projectId: \"posts-8b494\",\n  storageBucket: \"posts-8b494.appspot.com\",\n  messagingSenderId: \"1040292931183\",\n  appId: \"1:1040292931183:web:323db79b29f37113328f9a\",\n  measurementId: \"G-4BMPC5E3EC\",\n};\n\nconst fire = firebase.initializeApp(firebaseConfig);\n\nexport default fire.firestore();\n","\nimport React from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport Modal from \"react-modal\"; // npm i react-modal || npmjs.com/package/react-modal\nModal.setAppElement(\"#root\"); // to avoid the warning\n\nconst OurModal = (props) => {\n  // console.log(props.ModalOn);\n\n  return (\n    <div>\n      <Modal\n        onRequestClose={props.ModalOff}\n        isOpen={props.ModalOn}\n        contentLabel=\"Selected Option\"\n        closeTimeoutMS={500}\n      >\n        <div>\n          <h1 className=\"centerTxt mar-top\">Welcome to the Add Board Modal</h1>\n          <h3 className=\"centerTxt\">Please edit and hit the submit button </h3>\n        </div>\n        <div className=\"boardFormCon\">\n          <Form className=\"boardForm\">\n            <Form.Group controlId=\"formBasicEmail\">\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Title\"\n                onChange={props.getBoardInputData}\n              />\n            </Form.Group>\n\n            <div className=\"itemBtnCon\">\n              <Button\n                variant=\"primary\"\n                type=\"submit\"\n                onClick={props.addBoard}\n                block\n              >\n                Submit\n              </Button>\n            </div>\n\n            <br></br>\n            <div className=\"itemBtnCon\">\n              <Button variant=\"secondary\" onClick={props.SwitchModal} block>\n                cancel\n              </Button>\n            </div>\n          </Form>\n        </div>\n      </Modal>\n    </div>\n  );\n};\n\nexport default OurModal;","import React from \"react\";\nimport { Button, DropdownButton, Dropdown } from \"react-bootstrap\";\n\nconst AddBoardBtn = (props) => {\n  return (\n    <div className=\"addboard\">\n      <div className=\"half-width\">\n        <Button variant=\"primary\" onClick={props.SwitchModal} block>\n          Add a Board\n        </Button>\n      </div>\n      <div className=\"half-width\">\n        <DropdownButton\n          className=\"in-half\"\n          id=\"dropdown-basic-button\"\n          title=\"Sort By\"\n        >\n          <Dropdown.Item onClick={props.sortByTitle}>Title</Dropdown.Item>\n          <Dropdown.Item onClick={props.sortByDate}>Date</Dropdown.Item>\n        </DropdownButton>\n        <Button\n          onClick={props.taggelView}\n          className=\"in-half\"\n          variant=\"primary\"\n        >\n          {props.View === true? \"List\": \"Board\" }\n        </Button>\n      </div>\n    </div>\n  );\n};\nexport default AddBoardBtn;\n","import React from \"react\";\n\nimport { ButtonGroup, ToggleButton, Form, Button } from \"react-bootstrap\";\nconst AddItem = (props) => {\n  return (\n    <div className=\"formcon\">\n      {props.board.id === props.FormOn ? (\n        <Form className=\"form\">\n          <Form.Group controlId=\"formBasicEmail\">\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Title\"\n              name=\"title\"\n              ref={props.register}\n            />\n          </Form.Group>\n\n          <Form.Group controlId=\"formBasicEmail\">\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Assigned To\"\n              name=\"assignedTo\"\n              ref={props.register}\n            />\n          </Form.Group>\n\n          <Form.Group controlId=\"formBasicEmail\">\n            <Form.Control\n              type=\"text\"\n              placeholder=\"due date\"\n              name=\"dueDate\"\n              ref={props.register}\n            />\n          </Form.Group>\n\n          <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n            <Form.Control\n              as=\"textarea\"\n              rows=\"3\"\n              name=\"note\"\n              ref={props.register}\n              placeholder=\"Description\"\n            />\n          </Form.Group>\n          <div className=\"itemBtnCon\">\n            <Button\n              variant=\"primary\"\n              onClick={() => {\n                props.submiting();\n              }}\n            >\n              Submit\n            </Button>\n\n            <Button variant=\"secondary\" type=\"submit\" onClick={props.emptyForm}>\n              cancel\n            </Button>\n          </div>\n        </Form>\n      ) : (\n        <ButtonGroup toggle className=\"mb-2\">\n          <ToggleButton\n            onClick={(e) => props.assignForm(props.board.id)}\n            type=\"checkbox\"\n            defaultChecked\n            value=\"1\"\n          >\n            Add Item\n          </ToggleButton>\n          <ToggleButton\n            variant=\"secondary\"\n            type=\"checkbox\"\n            defaultChecked\n            onClick={(e) => props.deleteBoard(props.board.id)}\n          >\n            Delete Board\n          </ToggleButton>\n        </ButtonGroup>\n      )}\n    </div>\n  );\n};\nexport default AddItem;\n","import React from \"react\";\nimport { Card, ButtonGroup, ToggleButton, DropdownButton, Dropdown, Form, Button } from \"react-bootstrap\";\nimport uid from \"uid\";\nconst Item = (props) => {\n  return (\n    <div>\n      {props.board.cardList.map((item) => (\n        <div key={uid()}>\n          {item.complated === false && (\n            <Card style={{ width: \"100%\" }}>\n          \n              <Card.Body>\n                <Card.Title>{item.title}</Card.Title>\n                <Card.Title>{item.assignedTo}</Card.Title>\n                <Card.Text className=\"centerTxt\">{item.dueDate}</Card.Text>\n                <Card.Text className=\"centerTxt\">{item.note}</Card.Text>\n              </Card.Body>\n              <ButtonGroup toggle className=\"mb-2\">\n                <ToggleButton\n                  type=\"checkbox\"\n                  defaultChecked\n                  onClick={() => props.markAsCompleted(props.board, item)}\n                >\n                  Complated\n                </ToggleButton>\n\n                <ToggleButton\n                  type=\"checkbox\"\n                  defaultChecked\n                  value=\"1\"\n                  variant=\"warning\"\n                  onClick={() => props.StartEditItem(props.board, item)}\n                >\n                  Edit\n                </ToggleButton>\n\n                <ToggleButton\n                  type=\"checkbox\"\n                  defaultChecked\n                  value=\"1\"\n                  variant=\"danger\"\n                  onClick={() => props.deleteItem(props.board.id, item.id)}\n                >\n                  Delete\n                </ToggleButton>\n              </ButtonGroup>\n            </Card>\n          )}\n        </div>\n      ))}\n    </div>\n  );\n};\nexport default Item;\n","import React from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport Modal from \"react-modal\"; // npm i react-modal || npmjs.com/package/react-modal\nModal.setAppElement(\"#root\"); // to avoid the warning\n\nconst EditItem = (props) => {\n  return (\n    <div>\n      <Modal\n        onRequestClose={props.StartEditItemOff}\n        isOpen={props.EditItemState.open}\n        contentLabel=\"Selected Option\"\n        closeTimeoutMS={900}\n      >\n        <h1 className=\"centerTxt mar-top\">Welcome to the Edit Modal</h1>\n        <br></br>\n        <div className=\"boardFormCon\">\n          <Form className=\"form\">\n            <Form.Group controlId=\"formBasicEmail\">\n              <Form.Label>Title</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Title\"\n                name=\"EditTitle\"\n                ref={props.registerEdit}\n                defaultValue={props.OnEditItem.title}\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"formBasicEmail\">\n              <Form.Label>Assigned To</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Assigned To\"\n                name=\"EditAssignTo\"\n                ref={props.registerEdit}\n                defaultValue={props.OnEditItem.title}\n              />\n            </Form.Group>\n            <Form.Group controlId=\"formBasicEmail\">\n              <Form.Label>Due Date</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"due date\"\n                name=\"EditDueDate\"\n                ref={props.registerEdit}\n                defaultValue={props.OnEditItem.dueDate}\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n              <Form.Label>Description</Form.Label>\n              <Form.Control\n                as=\"textarea\"\n                rows=\"3\"\n                name=\"EditNote\"\n                ref={props.registerEdit}\n                defaultValue={props.OnEditItem.note}\n              />\n            </Form.Group>\n            <div className=\"itemBtnCon\">\n              <Button\n                block\n                variant=\"primary\"\n                onClick={() => {\n                  props.submitingEdit();\n                }}\n              >\n                Submit\n              </Button>\n            </div>\n            <br></br>\n            <div className=\"itemBtnCon\">\n              <Button\n                block\n                variant=\"secondary\"\n                onClick={props.StartEditItemOff}\n              >\n                cancel\n              </Button>\n            </div>\n          </Form>\n        </div>\n      </Modal>\n    </div>\n  );\n};\nexport default EditItem;\n","import uid from \"uid\";\nimport React, { useState, useEffect } from \"react\";\nimport { OverlayTrigger, Popover, Form, Button } from \"react-bootstrap\";\n\nconst BoardsList = (props) => {\n  const [ItemsOn, setItemsOn] = useState(\"\");\n\n  const changeItemsOn = (id) => {\n    if (id === ItemsOn) {\n      setItemsOn(\"\");\n    } else {\n      setItemsOn(id);\n    }\n  };\n\n  return (\n    <div className=\"listBoard-con\">\n      {props.Board.map((board) => (\n        <div\n          key={uid()}\n          className=\"listBoard\"\n          onClick={() => changeItemsOn(board.id)}\n        >\n          <div className=\"w\">{board.title}</div>\n          {ItemsOn === board.id ? (\n            <div>\n              <div className=\"itemsList-up\">\n                {board.cardList.map((item) => (\n                  <div key={uid()}>\n                    {item.complated === false && (\n                      <div className=\"itemsList\">{item.title}</div>\n                    )}\n                  </div>\n                ))}\n              </div>\n            </div>\n          ) : null}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default BoardsList;\n","import { Card } from \"react-bootstrap\";\nimport React, { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\"; // npm i react-hook-form ***********1\nimport fire from \"./../containers/db\";\nimport uid from \"uid\";\nimport Modal from \"./modal\";\nimport AddBoardBtn from \"./addBoardBtn\";\nimport AddItem from \"./addItem\";\nimport Item from \"./item\";\nimport EditItem from \"./editItem\";\nimport BoardsList from \"./boardsList\";\n\nconst Board = () => {\n  const [FormOn, setFormOn] = useState(\"\");\n  const [Board, setBoard] = useState([]);\n  const [ModalOn, setModalOn] = useState(false);\n  const [InputState, setInputState] = useState(\"\");\n  const [EditItemState, setEditItemState] = useState({ open: false });\n  const [OnEditItem, setOnEditItem] = useState({});\n  const [View, setView] = useState(true);\n  const [SortedBoard, setSortedBoard] = useState([]); // Why this work\n\n  var date = new Date();\n  var fullDate = `${date.getFullYear()}/${date.getMonth()}/${date.getDate()} | ${date.getHours()}:${date.getMinutes()}:${date.getSeconds()}`;\n\n  const sortByTitle = () => {\n    Board.sort((a, b) => {\n      if (a.title.toLowerCase() > b.title.toLowerCase()) {\n        return 1;\n      }\n      return -1;\n    });\n    setSortedBoard(\"title\"); // Why this work if i set any state white calling this fun sorting work with our setting any state it does not work\n  };\n\n  const sortByDate = () => {\n    Board.sort((a, b) => {\n      if (a.date < b.date) {\n        return 1;\n      }\n      return -1;\n    });\n    setSortedBoard(\"date\"); // Why this work if i set any state white calling this fun sorting work with our setting any state it does not work\n  };\n\n  // fetching the Data reuseable function\n  const fetchData = async () => {\n    const res = await fire.collection(\"posts\").get(); //[]\n    const posts = await res.docs.map((post) => post.data());\n    await posts.sort((a, b) => {\n      if (a.dateStamp < b.dateStamp) {\n        return 1;\n      }\n      return -1;\n    });\n    setBoard(posts);\n  };\n\n  //handle the board function to add new board\n  const addBoard = async (e) => {\n    e.preventDefault();\n    const uniID = uid();\n    let newBoard;\n    // if Board is empty\n    if (Board.length === 0) {\n      newBoard = await [\n        {\n          id: uniID,\n          title: InputState,\n          date: fullDate,\n          dateStamp: Date.now(),\n          cardList: [],\n        },\n      ];\n      setBoard(newBoard);\n      const insert = await fire.doc(`posts/${newBoard[0].id}`).set(newBoard[0]);\n    } else {\n      newBoard = await {\n        id: uniID,\n        title: InputState,\n        date: fullDate,\n        dateStamp: Date.now(),\n        cardList: [],\n      };\n\n      const insertnow = await fire.doc(`posts/${newBoard.id}`).set(newBoard);\n      setBoard([newBoard, ...Board]);\n    }\n    setModalOn(false);\n  };\n\n  const deleteBoard = async (id) => {\n    try {\n      const deleteFromBase = await fire.collection(\"posts\").doc(id).delete();\n      const board = await Board.filter((el) => el.id !== id);\n      setBoard(board);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  // adding cardList\n  const { register, handleSubmit } = useForm();\n  //const { registerEdit, handleSubmitEdit } = useForm();\n  const onSubmit = async (data) => {\n    const uniID = uid();\n    const oldBoard1 = await Board.filter((el) => el.id === FormOn);\n    const oldBoard = await oldBoard1[0];\n    const dataWithStatus = await {\n      ...data,\n      complated: false,\n      id: uniID,\n      BoardID: oldBoard.id,\n    };\n    const newCardList = await [...oldBoard.cardList, dataWithStatus];\n    const index = await Board.indexOf(oldBoard);\n    const { id, title, date, dateStamp } = await oldBoard;\n    const newBoard = await {\n      date,\n      dateStamp,\n      id,\n      title,\n      cardList: newCardList,\n    };\n    // update Board state\n    const finalData = await [\n      ...Board.slice(0, index),\n      newBoard,\n      ...Board.slice(index + 1),\n    ];\n    setBoard(finalData);\n    const saveDate = await fire.collection(\"posts\").doc(FormOn).update({\n      cardList: newCardList,\n    });\n    setFormOn(\"\");\n  };\n\n  const deleteItem = async (boardId, itemId) => {\n    const oldBoard1 = await Board.filter((el) => el.id === boardId);\n    const oldBoard = await oldBoard1[0];\n    const newCardList = await oldBoard.cardList.filter(\n      (el) => el.id !== itemId\n    );\n    const { id, title, date, dateStamp } = await oldBoard;\n    const newBoard = await {\n      id,\n      title,\n      date,\n      dateStamp,\n      cardList: newCardList,\n    };\n\n    // update Board state\n    const index = await Board.indexOf(oldBoard);\n    const finalData = await [\n      ...Board.slice(0, index),\n      newBoard,\n      ...Board.slice(index + 1),\n    ];\n    setBoard(finalData);\n    const saveDate = await fire\n      .collection(\"posts\")\n      .doc(boardId)\n      .update(newBoard);\n  };\n\n  // editItem\n  const StartEditItem = (board, item) => {\n    setEditItemState({\n      open: true,\n      board,\n      item,\n    });\n    setOnEditItem(item);\n  };\n  // handling edit submiting\n  const submitingEdit = async (data) => {\n    // get item from EditItemState\n    const oldItem = await EditItemState.item;\n    const oldBoard = await EditItemState.board;\n    const newItem = await {\n      ...oldItem,\n      title: data.EditTitle,\n      assignedTo: data.EditAssignTo,\n      dueDate: data.EditDueDate,\n      note: data.EditNote,\n    };\n\n    const ItemIndex = await oldBoard.cardList.indexOf(oldItem);\n    const BoardIndex = await Board.indexOf(oldBoard);\n\n    const newCardList = await [\n      ...oldBoard.cardList.slice(0, ItemIndex),\n      newItem,\n      ...oldBoard.cardList.slice(ItemIndex + 1),\n    ];\n\n    const newBoard = await {\n      id: oldBoard.id,\n      title: oldBoard.title,\n      date: oldBoard.date,\n      dateStamp: oldBoard.dateStamp,\n      cardList: newCardList,\n    };\n\n    const finalData = await [\n      ...Board.slice(0, BoardIndex),\n      newBoard,\n      ...Board.slice(BoardIndex + 1),\n    ];\n\n    setBoard(finalData);\n    setOnEditItem({});\n    setEditItemState({ open: false });\n    const saveDate = fire\n      .collection(\"posts\")\n      .doc(oldBoard.id)\n      .update({ cardList: newCardList });\n  };\n  const StartEditItemOff = () => {\n    setEditItemState({ open: false });\n  };\n  //turn modal on/off\n  const SwitchModal = () => {\n    setModalOn(!ModalOn);\n  };\n  //turn modal off\n  const ModalOff = () => {\n    setModalOn(false);\n  };\n  // get value od add Board input\n  const getBoardInputData = (e) => {\n    setInputState(e.target.value);\n  };\n\n  const emptyForm = () => {\n    setFormOn(\"\");\n  };\n  const assignForm = (id) => {\n    setFormOn(id);\n  };\n  const markAsCompleted = async (oldBoard, oldItem) => {\n    // get item from EditItemState\n    const newItem = await {\n      ...oldItem,\n      complated: true,\n    };\n\n    const ItemIndex = await oldBoard.cardList.indexOf(oldItem);\n    const BoardIndex = await Board.indexOf(oldBoard);\n\n    const newCardList = await [\n      ...oldBoard.cardList.slice(0, ItemIndex),\n      newItem,\n      ...oldBoard.cardList.slice(ItemIndex + 1),\n    ];\n\n    const newBoard = await {\n      id: oldBoard.id,\n      title: oldBoard.title,\n      date: oldBoard.date,\n      dateStamp: oldBoard.dateStamp,\n      cardList: newCardList,\n    };\n\n    const finalData = await [\n      ...Board.slice(0, BoardIndex),\n      newBoard,\n      ...Board.slice(BoardIndex + 1),\n    ];\n\n    setBoard(finalData);\n    const saveDate = fire\n      .collection(\"posts\")\n      .doc(oldBoard.id)\n      .update({ cardList: newCardList });\n  };\n\n  const taggelView = () => {\n    setView(!View);\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  return (\n    <div className=\"con\">\n      <Modal\n        SwitchModal={SwitchModal}\n        ModalOff={ModalOff}\n        ModalOn={ModalOn}\n        getBoardInputData={getBoardInputData}\n        addBoard={addBoard}\n      />\n      <AddBoardBtn\n        SwitchModal={SwitchModal}\n        sortByDate={sortByDate}\n        sortByTitle={sortByTitle}\n        taggelView={taggelView}\n        View={View}\n      />\n\n      {View ? (\n        <div>\n          {\" \"}\n          <div className=\"boardcon\">\n            {Board.map((board) => {\n              return (\n                <div key={uid()}>\n                  <Card\n                    key={uid()}\n                    style={{ width: \"25rem\" }}\n                    className=\"cards\"\n                  >\n                    <AddItem\n                      board={board}\n                      FormOn={FormOn}\n                      emptyForm={emptyForm}\n                      assignForm={assignForm}\n                      register={register}\n                      submiting={handleSubmit(onSubmit)}\n                      deleteBoard={deleteBoard}\n                    />\n\n                    <Card.Body>\n                      <Card.Title>{board.title}</Card.Title>\n                      <Card.Title>{board.date}</Card.Title>\n                      <Item\n                        board={board}\n                        deleteItem={deleteItem}\n                        StartEditItem={StartEditItem}\n                        markAsCompleted={markAsCompleted}\n                      />\n                      <EditItem\n                        EditItemState={EditItemState}\n                        StartEditItemOff={StartEditItemOff}\n                        OnEditItem={OnEditItem}\n                        registerEdit={register}\n                        submitingEdit={handleSubmit(submitingEdit)}\n                      />\n                    </Card.Body>\n                  </Card>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      ) : (\n        <div>\n          <BoardsList Board={Board} taggelView={taggelView} />\n        </div>\n      )}\n    </div>\n  );\n};\nexport default Board;\n","import { Card, ButtonGroup, ToggleButton } from \"react-bootstrap\";\nimport React, { useState, useEffect } from \"react\";\nimport fire from \"./../containers/db\";\nimport uid from \"uid\";\nimport CompletedItem from \"./completedItem\";\n\nconst Board = () => {\n  const [Items, setItems] = useState([]);\n\n  // fetching the Data reuseable function\n  const fetchData = async () => {\n    const res = await fire.collection(\"posts\").orderBy(\"title\", \"desc\").get(); //[]\n    const posts = res.docs.map((post) => post.data());\n\n    const data = posts.map((board) => board.cardList);\n    let completedItems = [];\n    const rows = data.length;\n\n    for (let i = 0; i < rows; i++) {\n      let items = data[i].length;\n      for (let n = 0; n < items; n++) {\n        if (data[i][n].complated === true) {\n          completedItems = [...completedItems, data[i][n]];\n        }\n      }\n    }\n    setItems(completedItems);\n  };\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  return (\n    <div className=\"items-con\">\n      {Items.map((item) => (\n        <div className=\"items\" key={uid()}>\n          {\n            <Card style={{ width: \"100%\" }}>\n              <Card.Body>\n                <Card.Title>{item.title}</Card.Title>\n                <Card.Text className=\"centerTxt\">{item.assignedTo}</Card.Text>\n                <Card.Text className=\"centerTxt\">{item.dueDate}</Card.Text>\n                <Card.Text className=\"centerTxt\">{item.note}</Card.Text>\n                <Card.Text className=\"centerTxt\">{item.complated}</Card.Text>\n              </Card.Body>\n            </Card>\n          }\n        </div>\n      ))}\n    </div>\n  );\n};\nexport default Board;\n","import React from \"react\";\nconst Err404 = () => {\n  return (\n    <div>\n      <h1>404 Page not found</h1>\n    </div>\n  );\n};\nexport default Err404;\n","import React from \"react\";\nconst Footer = () => {\n  return (\n    <div\n      id=\"footer\"\n      className=\"footer\"\n    >\n      <h3>\n        This is the footer, believe it or not I don't know what to put here{\" \"}\n      </h3>\n    </div>\n  );\n};\nexport default Footer;\n","import React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Navigation from \"./components/navigation\";\nimport CompletedBoards from \"./components/board\";\nimport UnCompletedBoards from \"./components/complete\";\nimport Err404 from \"./components/err404\";\nimport Footer from \"./components/footer\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"app\">\n        <BrowserRouter>\n          <Navigation />\n          <Switch>\n            <Route path=\"/\" component={CompletedBoards} exact={true} />\n            <Route\n              path=\"/completedboards\"\n              component={UnCompletedBoards}\n              exact={true}\n            />\n            <Route component={Err404} />\n          </Switch>\n        </BrowserRouter>\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}